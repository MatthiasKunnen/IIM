@model IIM.ViewModels.MaterialViewModel

@{
    ViewBag.Title = "Detail";
}

<h2>Detail</h2>
<div class="col-md-12 container material">
    <div >
        <div class="col-sm-3  pull-left">
            <img src="@Url.Content(Model.PhotoUrl)" class="img-rounded center-block" alt="Foto van @Html.DisplayFor(modelItem => Model.Name)" />
        </div>
        <div class="col-sm-9">
            <dl class="dl-horizontal text-left">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ArticleNr)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ArticleNr)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Firm)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Firm.Name)
                    <br />
                    @(Model.Firm.Email.IsEmpty() ? "Geen emailadres beschikbaar" : @Html.DisplayFor(model => model.Firm.Email).ToString())
                    <br/>

                     @(Model.Firm.PhoneNumber.IsEmpty() ? "Geen telefoonnummer beschikbaar" : @Html.DisplayFor(model => model.Firm.PhoneNumber).ToString())
                    <br/>
                    @(Model.Firm.Website.IsEmpty()?"Geen website beschikbaar": @Html.DisplayFor(model => model.Firm.Website).ToString())
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Curriculars)
                </dt>
                @foreach (var item in Model.Curriculars)
                {
                    <dd>
                        @Html.DisplayFor(modelItem => item.Name)
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(model => model.TargetGroups)
                </dt>
                @foreach (var item in Model.TargetGroups)
                {
                    <dd>
                        @Html.DisplayFor(modelItem => item.Name)
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(model => model.Price)
                </dt>

                <dd>
                     @Html.DisplayFor(model => model.Price)
                </dd>

            </dl>
            
    @using (Html.BeginForm("AddMaterialToWishList", "Inventory", new { id = Model.Id}))
    {
            
            <button type="submit" class="btn btn-default">
                <span class="glyphicon glyphicon-shopping-cart"></span>Voeg aan verlanglijst toe
            </button>
            }
            <br />
            <br/>
            @Html.ActionLink("Terug naar het overzicht","Index")
        </div>

    </div>
   
</div>

