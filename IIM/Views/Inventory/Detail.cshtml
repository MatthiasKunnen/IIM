@using System.Linq.Expressions
@using IIM.ViewModels
@model IIM.ViewModels.MaterialViewModel

@{
    ViewBag.Title = "Detail";
}

<h2>Details @Model.Name</h2>
<div class="col-md-12 container material">
    <div>
        <div class="col-sm-3  pull-left">
            <img src="@Url.Content(Model.PhotoUrl)" class="img-rounded center-block" alt="Foto van @Html.DisplayFor(modelItem => Model.Name)" />
            @using (Html.BeginForm("Index", "Inventory"))
            {

                <button class="back">
                    <span class="glyphicon glyphicon-circle-arrow-left"></span>
                </button>
            }
        </div>
        <div class="col-sm-9">
            <dl class="dl-horizontal" id="detail">
                @CreateDescription(model => model.Name)
                @CreateDescription(model => model.ArticleNr)
                @CreateDescription(model => model.Description)
                <dt>@Html.DisplayNameFor(model => model.Firm)</dt>
                <dd>
                    @(Model.Firm == null ? "Geen firma" : Html.DisplayFor(model => model.Firm.Name).ToString())
                    @Html.DisplayFor(model => model.Firm.Name)
                    <br />
                    @(Model.Firm?.Email.IsEmpty() ?? true ? "Geen emailadres beschikbaar" : @Html.DisplayFor(model => model.Firm.Email).ToString())
                    <br />
                    @(Model.Firm?.PhoneNumber.IsEmpty() ?? true ? "Geen telefoonnummer beschikbaar" : @Html.DisplayFor(model => model.Firm.PhoneNumber).ToString())
                    <br />
                    @(Model.Firm?.Website.IsEmpty() ?? true ? "Geen website beschikbaar" : @Html.DisplayFor(model => model.Firm.Website).ToString())
                </dd>
                <dt>@Html.DisplayNameFor(model => model.Curriculars)</dt>
                <dd>
                    @if (Model.Curriculars != null)
                    {
                        Model.Curriculars.ForEach(item => Html.DisplayFor(modelItem => item.Name));
                    }
                    else
                    {
                        @:Geen leergebieden
                    }
                </dd>
                <dt>@Html.DisplayNameFor(model => model.TargetGroups)</dt>
                <dd>
                    @if (Model.TargetGroups != null)
                    {
                        Model.TargetGroups.ForEach(item => Html.DisplayFor(modelItem => item.Name));
                    }
                    else
                    {
                        @:Geen doelgroepen
                    }
                </dd>
                @CreateDescription(model => model.Price)
            </dl>
            @Html.Partial("_Button", Model)
        </div>
    </div>
</div>

@helper CreateDescription(Expression<Func<MaterialViewModel, object>> property)
{
    <dt>@Html.DisplayNameFor(property)</dt>
    <dd>@Html.DisplayFor(property)</dd>
}
